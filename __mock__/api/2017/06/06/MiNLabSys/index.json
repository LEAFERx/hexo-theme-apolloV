{"path":"/2017/06/06/MiNLabSys/","title":"MiNLabSys搭建和各种坑","date":"2017-06-06T12:37:19.000Z","updated":"2018-03-28T10:31:57.389Z","content":"<p>MiNLabSys是宁波中学创客空间实验室系统的简称<br>该系统目前已实现中央服务器和门禁系统的部分功能（虽然完成度很低orz）<br>介绍和代码请移步GitHub：<br><a href=\"https://github.com/MakersInNingZhong/MiNLabSys-Server\" target=\"_blank\" rel=\"noopener\">MakersInNingZhong/MiNLabSys-Server</a><br><a href=\"https://github.com/MakersInNingZhong/MiNLabSys-Door\" target=\"_blank\" rel=\"noopener\">MakersInNingZhong/MiNLabSys-Door</a></p>\n<p>本文主要着重于搭建该系统时遇到的各种坑</p>\n<p><img src=\"https://lc-cqha0xyi.cn-n1.lcfile.com/7231309e5c5412650953.jpg\" alt=\"\"></p>\n<a id=\"more\"></a>\n<hr>\n<p>好了按惯例先扯上一会儿 跳过就好w<br>好久不见 我（大概）来月更了orzzz<br>临近期末事情越来越多 各种比赛和社团要收尾 根本没时间刷SICP和习题<br>更何况我又入了C++ Premier Plus的坑<br>所以…………………<br>SICP的第一篇读书笔记可能要鸽很久很久啦（大概高三暑假）（你还真有脸说）<br>当然习题还是会抽空刷的 在GitBook上不定期诈尸<a href=\"https://leaferx.gitbooks.io/sicp/content/\" target=\"_blank\" rel=\"noopener\">Exersices Solutions of SICP</a><br>公开课也一直在刷 虽然每天看不到十分钟就要睡觉了orz</p>\n<p>真紧张明天我的桌子和椅子就要参加高考了<br>看了一下ZUI DAYS<br>还有88天物竞<br>还有131天选考<br>还有365天高考<br>时间有时候真是令人生厌</p>\n<p>物理还是没有进150名<br>不过暑假要去质心决赛班 终于可以亲眼见到蔡子星啦嘿嘿嘿<br>我爱物理我爱物理我爱物理我爱物理我爱物理我爱物理我爱物理</p>\n<p>物理免修后多出来五节自修课最近浪得很开心 刷刷题看看书泡泡实验室什么的<br>但不知道为什么时间还是那么少 事情还是那么多</p>\n<p>不知不觉扯了这么多orz 还是回归一下正题吧</p>\n<p>人生中第一次在Github上写这么长的英文README<br>人生中第一次Arduino写多文件模块化程序（没有用类啦因为觉得没必要orz）</p>\n<p>这个项目史无前例地遇到了各种巨坑 坑多到报警<br>到现在都还没有完全解决（大概也没空解决了呃）</p>\n<p>其实本来这个项目是很宏大的 还计划了智能窗帘、智能橱柜、分布式传感器系统<br>但因为人手和时间的原因 可能就只能这样了….<br>创客空间也没几个人真正在做事情 无奈</p>\n<p>这个项目目前已经参加了宁波中科院创客空间举办的比赛 相关参赛视频和链接什么的在文末</p>\n<p>好了 接下来 我们谈谈各种坑</p>\n<hr>\n<h1 id=\"服务器部分\"><a href=\"#服务器部分\" class=\"headerlink\" title=\"服务器部分\"></a>服务器部分</h1><p>来张（半）全家福<br><img src=\"https://lc-cqha0xyi.cn-n1.lcfile.com/5547dd776dcc215b7e13.jpg\" alt=\"\"><br>从左下到右上分别是 ESP8266、MFRC522、Arduino Uno、Banana Pi</p>\n<p>服务器部分我采用的是香蕉派（最经典的那款）（也就是最弱的那款）（连板载WiFi都没有）<br>没错 就是这么简单的一个node应用 我都遇到了巨坑<br>而且第一个坑就是在安装node上</p>\n<p>首先说明 我用的系统是<strong>32位</strong>的Raspbian jessie for bananapi<br>在安装之前 我就看见网上大佬们各种警告 <strong>不要用包管理器安装</strong><br>那好吧 那就下载源码编译吧<br>可我万万没想到的是 我光make就花了整整一天的时间<br>喵喵喵？？？<br>更可怕的是 我make install了整整一天都没装上…..<br>CPU一直跑在100%但我并不知道它到底在干啥 只能^C了<br>最后 我是下载了别人编译好的二进制包才成功装了上去</p>\n<p>第二个坑是对这次开发影响最小的但是让我感受到了绝望<br>我本来想打算借着这个项目接触一下MongoDB<br>于是我在开始做之前看了大半个月的教程和文档<br>好了你们应该猜到什么了吧<br><strong>MongoDB只支持64位系统！！！</strong><br><strong>这只香蕉派只有32位系统镜像！！！（至少我没找到64位）</strong><br>那好吧 我大半个月只能算白看了 毕竟再次应用肯定不知道要等到什么时候去到时候肯定早就忘了<br>于是只能屈服于MySQL 安慰自己关系型数据库挺好的 稳定安全又好弄（雾）</p>\n<p>第三个坑是一个十分naive的坑（咳）<br>node和mysql连接的库只有英文文档 还写得有点乱糟糟的<br>我修改了一下复制的示例 然后发现如果查询命中就没问题 但如果没有命中就会报错 直接退出<br>当时以为是库的原因 没有命中就throw error<br>然后就各种看文档和怀疑自己的英语水平<br>直到我看见了<code>if(err) throw err;</code><br>……..<br>于是我神经错乱到在回调函数外写了try-carch……….<br>然后我看到了错误提示<strong>Cannot read property of undefined</strong><br>……………..<br>我可能是要重新学一遍js<br>总结：</p>\n<ol>\n<li>类型检查一定要做 尤其是和数据库相关的时候</li>\n<li>遇到错误千万要仔细读几遍 确定了错哪再去调bug<br>不过这次是因为由于error是在回调函数里面被抛出 所以错误信息被模块又封装了一层所以特别不起眼orzzz</li>\n</ol>\n<p>迈过了三座大坑 我写完了服务端<br>但是 我万万没有想到的是 这还只是个开始……</p>\n<hr>\n<h1 id=\"客户端部分\"><a href=\"#客户端部分\" class=\"headerlink\" title=\"客户端部分\"></a>客户端部分</h1><p><img src=\"https://lc-cqha0xyi.cn-n1.lcfile.com/59f1e27eb16e210cb2ee.jpg\" alt=\"\"><br>MFRC522和ESP8266</p>\n<p>调MFRC522一切顺利 用了<a href=\"https://github.com/miguelbalboa/rfid\" target=\"_blank\" rel=\"noopener\">@miguelbalboa</a>的库<br>谢天谢地 这是我最靠谱的时刻</p>\n<p>然后就是ESP8266了 这家伙真我是见过的最难调的模块<br>尤其是当你一开始没有开软串口来调试的时候<br>（不要问我为什么不用软串口连ESP8266 软串口波特率最高只有9600…）</p>\n<p>我这个项目是使用HTTP协议完成客户端和服务端的通信<br>数据交换格式是json<br>这也是我整个项目最作死的地方……</p>\n<p>数据只有十几二十字节 但加上了HTTP头瞬间变成了两百字节…<br>然后Arduino就瞬间爆炸<br>什么串口缓冲区溢出啦 内存不足啦 全都来了<br>关键是这个错误没有报错一开始还意识不到 白做了很多debug尝试</p>\n<p>第一个坑就是串口缓冲区溢出<br>而且这个坑让我明白了 什么叫做为什么调通了程序都不知道自己做了什么操作</p>\n<p>一开始我读取数据时 使用的函数大概是这样的</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span> (ESP8266.available() &gt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">    msg += <span class=\"keyword\">char</span>(ESP8266.read());</span><br><span class=\"line\">    delay(<span class=\"number\">4</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后一般只接收到70来个字节就收不到了（Arduino默认缓冲区只有64字节）<br>很显然是缓冲区溢出了</p>\n<p>但很神奇的是 我把缓冲区调大也并没有什么卵用 消息始终收不全<br>尤其是当我把缓冲区调到256字节以上的时候 毛都收不到了………</p>\n<p>没办法 我只能从接收函数下手了<br>我怀疑接收函数一个一个字节实在太慢了尤其还停顿了4毫秒（虽然我把delay注释了也读不全虽然会稍微好一点）<br>然后我就看文档有没有直接收整个缓冲区的函数 于是我看到了readString<br>虽然这个操作把我带向了另外一个深坑</p>\n<p>于是我的接收函数就变成了这样</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ESP8266_ReadData</span><span class=\"params\">(String&amp; temp, <span class=\"keyword\">int</span> delay_time = <span class=\"number\">4</span>)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> USE_DEBUG_MODE</span></span><br><span class=\"line\">        DEBUG.println(<span class=\"string\">\"Reading data...\"</span>);</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!ESP8266.available());</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(ESP8266.available())&#123;</span><br><span class=\"line\">        temp += ESP8266.readString();</span><br><span class=\"line\">        delay(delay_time);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>看上去非常正确是不是 可还是不行<br>但当我把缓冲区调到128字节的时候就特喵的行了……<br>work perfectly<br>这让我很绝望….<br>到底是为什么orz</p>\n<p>第二个坑又是文档的问题<br>我在用ArduinoJson库的时候 用了DynamicBuffer<br>可谁知道DynamicBuffer是不会自动释放的……<br>于是立马内存溢出 运行几轮后就程序错乱<br>当时不是很肯定是ArduinoJson的问题<br>而且我又看了两遍文档也注意到什么 直到我搜了Issue才解决<br>只要把DynamicBuffer定义在全局就行了<br>可这么重要的事情为什么就不能写在文档里呢<br>要么是我太小白了？（非常有可能orz）</p>\n<p>好了 来到最后一个巨坑 <strong>内！存！不！足！</strong><br>对这个巨坑 我想到的唯一办法就是上Arduino Mega2560<br>实在解决不了了</p>\n<p>为了解决第一个坑 我（迫不得已）用了String类（或者说只是因为懒而已String用起来好方便啊qwqqqq）<br>然后？然后内存就炸了</p>\n<p>虽然明明我删掉了所有调试信息后烧进去提示只占用了30%左右的内存<br>可能我局部String用得实在太多了吧<br>逼得我传String只能传引用（这才是正确的写法好吗直接返回String是真的非常小白的做法） 于是程序终于勉勉强强地跑起来了</p>\n<p>但是接下来就是我最绝望的时刻<br>因为这个程序 它不稳定<br>不稳定到什么程度呢<br>你完全不知道什么时候它是正常运行的<br>有的时候完全没法用<br>有的时候只能跑一轮两轮<br>极少数时候能一直正常运行<br>所以我按了无数遍的重启………<br>最难受的是我还看不见调试信息 为了省内存….</p>\n<p>总结：没事别拿Uno折腾自己 该上Mega就果断上 不要和内存优化死磕 尤其是当你还在用String类的时候</p>\n<hr>\n<p>其实还踩了很多很多小坑 但这篇充满吐槽风格的文章还是就到这吧<br>已经毛4000字了….第一次一口气写这么多….</p>\n<p>好了 最后附点视频</p>\n<p><a href=\"http://v.youku.com/v_show/id_XMjc5NDQyODAzMg\" target=\"_blank\" rel=\"noopener\">调试信息还活着的时候拍的演示视频</a></p>\n<p><a href=\"http://mp.weixin.qq.com/s?__biz=MzI3MTEwMDgwMg==&amp;mid=2655536407&amp;idx=1&amp;sn=d77da1e4def7710853bf3e9be177ba68&amp;chksm=f17a1bfac60d92ec0f2e8706d13ee2fdd38b884bdd901df14464de7790bddb1bef3231f92480&amp;mpshare=1&amp;scene=22&amp;srcid=0605oOWAMFhC8JmiVGsQCnHA#rd\" target=\"_blank\" rel=\"noopener\">最终的比赛视频</a></p>\n<p>晚好<br>2017/6/7 20:30<br>LEAFERx</p>\n","prev":"2017/06/16/use-gulp-to-minimize/","next":"2017/04/23/SICP-note-0/"}